name: Deploy OpenMetadata Stack to AKS

on:
  push:
    branches:
      - main
    paths:
      - "charts/openmetadata/**"
      - ".github/workflows/deploy.yaml"

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_CLUSTER_NAME: aks-dev-data-service 
      AZURE_RESOURCE_GROUP: aks-dev-data-service_group
      AZURE_REGION: your-region
      NAMESPACE: daap-dev

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ env.AZURE_CLUSTER_NAME }}

    - name: Create Namespace (if not exists)
      run: |
        kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE

    - name: Deploy MySQL
      run: |
        kubectl apply -f charts/openmetadata/mysql.yaml -n $NAMESPACE
        kubectl rollout status statefulset/mysql -n $NAMESPACE --timeout=180s

    - name: Deploy OpenSearch
      run: |
        helm upgrade --install opensearch bitnami/opensearch \
          -f charts/openmetadata/values-opensearch.yaml \
          --namespace $NAMESPACE --create-namespace --wait --timeout 10m
        kubectl rollout status sts opensearch -n $NAMESPACE --timeout=180s || true

    - name: Deploy OpenMetadata (with Airflow)
      run: |
        helm repo add open-metadata https://helm.open-metadata.org
        helm repo update
        helm upgrade --install openmetadata open-metadata/openmetadata \
          -f charts/openmetadata/values.yaml \
          --namespace $NAMESPACE --wait --timeout 10m

    - name: Check OpenMetadata rollout
      run: |
        kubectl rollout status deployment/openmetadata -n $NAMESPACE --timeout=180s

    - name: Show Pods & Services for Debugging
      if: failure()
      run: |
        kubectl get pods -n $NAMESPACE -o wide
        kubectl describe pods -n $NAMESPACE
        kubectl get svc -n $NAMESPACE
