executor: KubernetesExecutor
images:
  airflow:
    repository: daappoc25.azurecr.io/airflow
    tag: custom
    pullPolicy: IfNotPresent


airflow:
  config:
    AIRFLOW__OPENMETADATA__API_VERSION: "v1"
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"

  env:
  - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
    value: mysql+mysqlconnector://openmetadata_user:openmetadata123@mysql.daap-dev.svc.cluster.local:3306/openmetadata_db

  extraVolumeMounts:
    - name: airflow-plugins
      mountPath: /opt/airflow/plugins

  webserver:
    service:
      type: LoadBalancer
      port: 8080
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      httpGet:
        path: /health
        port: 8080
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 10
    resources:
      requests:
        memory: 512Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 500m

  scheduler:
    replicas: 1
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

  workers:
    replicas: 1
    persistence:
      enabled: true
      size: 500Mi
      accessModes:
        - ReadWriteOnce
      storageClassName: managed-csi
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m

  triggerer:
    persistence:
      enabled: false
      size: 500Mi
      accessModes:
        - ReadWriteOnce
      storageClassName: managed-csi
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false

  dags:
    persistence:
      enabled: false
      size: 500Mi
      accessModes:
        - ReadWriteOnce
      storageClassName: managed-csi

  logs:
    persistence:
      enabled: true
      size: 500Mi
      accessModes:
        - ReadWriteOnce
      storageClassName: managed-csi

  createUserJob:
    useHelmHooks: false

  migrateDatabaseJob:
    useHelmHooks: false

postgresql:
  enabled: false
