apiVersion: v1
kind: Namespace
metadata:
  name: daap-dev
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: daap-dev
type: Opaque
data:
  mysql-root-password: bXlzcWxyb290cGFzcw==  # base64 of 'mysqlrootpass'
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: daap-dev
type: Opaque
data:     
  openmetadata-mysql-password: b3Blbm1ldGFkYXRhMTIz        # base64 of 'openmetadata123'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb
  namespace: daap-dev
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS openmetadata_db;
    CREATE DATABASE IF NOT EXISTS airflow_db;
    CREATE USER IF NOT EXISTS 'openmetadata_user'@'%' IDENTIFIED BY 'openmetadata123';
    GRANT ALL PRIVILEGES ON openmetadata_db.* TO 'openmetadata_user'@'%';
    GRANT ALL PRIVILEGES ON airflow_db.* TO 'openmetadata_user'@'%';
    FLUSH PRIVILEGES;
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: daap-dev
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: daap-dev
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
        - name: volume-permissions
          image: busybox
          command:
            - sh
            - -c
            - |
              echo "Fixing permissions..."
              chown -R 1001:1001 /bitnami/mysql/data
          volumeMounts:
            - name: mysql-pvc
              mountPath: /bitnami/mysql/data
          securityContext:
            runAsUser: 0
      containers:
        - name: mysql
          image: bitnami/mysql:8.0
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_EXTRA_FLAGS
              value: "--default-authentication-plugin=mysql_native_password"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-pvc
              mountPath: /bitnami/mysql/data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["mysqladmin", "ping", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
            initialDelaySeconds: 20
            periodSeconds: 10
      volumes:
        - name: initdb
          configMap:
            name: mysql-initdb
  volumeClaimTemplates:
    - metadata:
        name: mysql-pvc
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: managed-csi
        resources:
          requests:
            storage: 1Gi
